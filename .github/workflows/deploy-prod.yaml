name: 🏭 Deploy a PRODUCCIÓN

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: '¿Confirmas el deploy a PRODUCCIÓN? (escribe: SI)'
        required: true
        default: 'NO'

jobs:
  deploy-production:
    name: Desplegar a Producción
    runs-on: mi-runners
    if: github.event.inputs.confirm == 'SI'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Instalar kubectl
      run: |
        echo "📥 Instalando kubectl v1.30.0..."
        curl -LO "https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client

    - name: Mostrar info del cluster y contexto
      run: |
        echo "🔎 KUBECONFIG (path): ${KUBECONFIG:-$HOME/.kube/config}"
        echo "🔎 Contextos disponibles:"
        kubectl config get-contexts || true
        echo "🔎 Contexto actual:"
        kubectl config current-context || true
        echo "🔎 Versiones (cliente/servidor si accesible):"
        kubectl version --short || true
        echo "🔎 Cluster info:"
        kubectl cluster-info 2>&1 || echo "kubectl no tiene acceso al cluster o KUBECONFIG no está configurado"
        echo "🔎 Nodos (si están disponibles):"
        kubectl get nodes -o wide 2>&1 || echo "No hay nodos visibles o no hay permisos"
        echo "🔎 Namespaces visibles:"
        kubectl get ns || true
        echo "🔎 Pods actuales en todos los namespaces:"
        kubectl get pods -A || true

    - name: Crear namespace si no existe
      run: |
        kubectl get ns prod || kubectl create ns prod
      
    - name: Confirmación de producción
      run: |
        echo "🚨 DESPLEGANDO A PRODUCCIÓN 🚨"
        echo "Rama: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        
    - name: Backup actual
      run: |
        echo "💾 Creando backup..."
        kubectl get deployment mi-app -n prod -o yaml > backup-prod.yaml 2>/dev/null || echo "No hay deployment previo"
        
    - name: Desplegar a producción
      run: |
        echo "🏭 Desplegando a PRODUCCIÓN..."
        kubectl apply -f k8s/prod/app-prod.yaml -n prod
        
    - name: Esperar deployment
      run: |
        kubectl rollout status deployment/mi-app -n prod --timeout=600s
        
    - name: Verificar resultado
      run: |
        echo "✅ Estado final en PRODUCCIÓN:"
        kubectl get pods -n prod -o wide
        kubectl get svc -n prod
        echo "🌐 Accesible en: http://localhost:30003"
        
    - name: Test de producción
      run: |
        echo "🧪 Test final de producción..."
        kubectl run test-prod --image=curlimages/curl --rm -i --restart=Never -n prod -- \
          curl -s http://mi-app-service.prod.svc.cluster.local || echo "Test completado"
        
    - name: Rollback si algo falla
      if: failure()
      run: |
        echo "🔙 ¡Algo falló! Haciendo rollback..."
        if [ -f backup-prod.yaml ]; then
          kubectl apply -f backup-prod.yaml
          echo "✅ Rollback desde backup completado"
        else
          kubectl rollout undo deployment/mi-app -n prod
          echo "✅ Rollback automático completado"
        fi
